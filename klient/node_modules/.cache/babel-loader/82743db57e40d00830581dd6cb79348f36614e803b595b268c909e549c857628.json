{"ast":null,"code":"// import { useState } from \"react\";\n// import axios from \"axios\";\n\n// function AddBook({ onBookAdded }) {\n//   const [newBook, setNewBook] = useState({\n//     title: \"\",\n//     author: \"\",\n//     rating: \"\",\n//     description: \"\",\n//   });\n//   const token = localStorage.getItem(\"token\");\n\n//   const handleAddBook = async () => {\n//     if (!newBook.title.trim() || !newBook.author.trim()) {\n//       alert(\"Tytuł i autor są wymagane.\");\n//       return;\n//     }\n\n//     const ratingNum = newBook.rating ? Number(newBook.rating) : null;\n//     if (ratingNum !== null && (ratingNum < 1 || ratingNum > 5)) {\n//       alert(\"Ocena musi być liczbą od 1 do 5.\");\n//       return;\n//     }\n\n//     try {\n//       await axios.post(\n//         \"http://localhost:8080/api/library/\", \n//         {\n//           title: newBook.title,\n//           author: newBook.author,\n//           rating: newBook.rating,\n//           description: newBook.description,\n//         },\n//         { headers: { \"x-access-token\": token } }\n//       );\n\n//       setNewBook({ title: \"\", author: \"\", rating: \"\", review: \"\" });\n//       alert(\"Książka dodana!\");\n//       if (onBookAdded) onBookAdded(); \n//     } catch (error) {\n//       console.error(\"Błąd dodawania książki:\", error.response || error.message);\n//       alert(\"Wystąpił błąd podczas dodawania książki.\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Dodaj książkę</h2>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Tytuł\"\n//         value={newBook.title}\n//         onChange={(e) => setNewBook({ ...newBook, title: e.target.value })}\n//       />\n//       <input\n//         type=\"text\"\n//         placeholder=\"Autor\"\n//         value={newBook.author}\n//         onChange={(e) => setNewBook({ ...newBook, author: e.target.value })}\n//       />\n//       <input\n//         type=\"number\"\n//         placeholder=\"Ocena (1-5)\"\n//         value={newBook.rating}\n//         onChange={(e) => setNewBook({ ...newBook, rating: e.target.value })}\n//         min=\"1\"\n//         max=\"5\"\n//       />\n//       <textarea\n//         placeholder=\"Opis\"\n//         value={newBook.description}\n//         onChange={(e) => setNewBook({ ...newBook, description: e.target.value })}\n//       />\n//       <button onClick={handleAddBook}>Dodaj książkę</button>\n//     </div>\n//   );\n// }\n\n// export default AddBook;","map":{"version":3,"names":[],"sources":["C:/Users/kubaj/Desktop/react-mern/klient/src/components/Main/AddBook.jsx"],"sourcesContent":["// import { useState } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// function AddBook({ onBookAdded }) {\r\n//   const [newBook, setNewBook] = useState({\r\n//     title: \"\",\r\n//     author: \"\",\r\n//     rating: \"\",\r\n//     description: \"\",\r\n//   });\r\n//   const token = localStorage.getItem(\"token\");\r\n\r\n//   const handleAddBook = async () => {\r\n//     if (!newBook.title.trim() || !newBook.author.trim()) {\r\n//       alert(\"Tytuł i autor są wymagane.\");\r\n//       return;\r\n//     }\r\n\r\n//     const ratingNum = newBook.rating ? Number(newBook.rating) : null;\r\n//     if (ratingNum !== null && (ratingNum < 1 || ratingNum > 5)) {\r\n//       alert(\"Ocena musi być liczbą od 1 do 5.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       await axios.post(\r\n//         \"http://localhost:8080/api/library/\", \r\n//         {\r\n//           title: newBook.title,\r\n//           author: newBook.author,\r\n//           rating: newBook.rating,\r\n//           description: newBook.description,\r\n//         },\r\n//         { headers: { \"x-access-token\": token } }\r\n//       );\r\n\r\n//       setNewBook({ title: \"\", author: \"\", rating: \"\", review: \"\" });\r\n//       alert(\"Książka dodana!\");\r\n//       if (onBookAdded) onBookAdded(); \r\n//     } catch (error) {\r\n//       console.error(\"Błąd dodawania książki:\", error.response || error.message);\r\n//       alert(\"Wystąpił błąd podczas dodawania książki.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Dodaj książkę</h2>\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Tytuł\"\r\n//         value={newBook.title}\r\n//         onChange={(e) => setNewBook({ ...newBook, title: e.target.value })}\r\n//       />\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Autor\"\r\n//         value={newBook.author}\r\n//         onChange={(e) => setNewBook({ ...newBook, author: e.target.value })}\r\n//       />\r\n//       <input\r\n//         type=\"number\"\r\n//         placeholder=\"Ocena (1-5)\"\r\n//         value={newBook.rating}\r\n//         onChange={(e) => setNewBook({ ...newBook, rating: e.target.value })}\r\n//         min=\"1\"\r\n//         max=\"5\"\r\n//       />\r\n//       <textarea\r\n//         placeholder=\"Opis\"\r\n//         value={newBook.description}\r\n//         onChange={(e) => setNewBook({ ...newBook, description: e.target.value })}\r\n//       />\r\n//       <button onClick={handleAddBook}>Dodaj książkę</button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AddBook;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}