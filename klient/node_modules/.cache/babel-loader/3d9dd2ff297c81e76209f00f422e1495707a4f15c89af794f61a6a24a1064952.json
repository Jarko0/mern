{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kubaj\\\\Desktop\\\\react-mern\\\\klient\\\\src\\\\components\\\\Main\\\\ReadBook.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReadBooks() {\n  _s();\n  const [readBooks, setReadBooks] = useState([]);\n  const [reviews, setReviews] = useState({}); // reviewText dla każdej książki\n  const token = localStorage.getItem(\"token\");\n  const fetchReadBooks = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8080/api/library/read\", {\n        headers: {\n          \"x-access-token\": token\n        }\n      });\n      setReadBooks(res.data.data);\n\n      // Inicjalizacja reviews - przypisz aktualne opinie do stanu\n      const initialReviews = {};\n      res.data.data.forEach(book => {\n        initialReviews[book._id] = book.reviewText || \"\";\n      });\n      setReviews(initialReviews);\n    } catch (err) {\n      console.error(\"Błąd pobierania przeczytanych książek:\", err);\n    }\n  };\n  useEffect(() => {\n    fetchReadBooks();\n  }, []);\n  const handleReviewChange = (bookId, value) => {\n    setReviews(prev => ({\n      ...prev,\n      [bookId]: value\n    }));\n  };\n  const submitReview = async bookId => {\n    try {\n      await axios.post(`http://localhost:8080/api/library/read/${bookId}/opinion`, {\n        reviewText: reviews[bookId]\n      }, {\n        headers: {\n          \"x-access-token\": token\n        }\n      });\n      alert(\"Opinia została dodana!\");\n      fetchReadBooks(); // odśwież listę po aktualizacji\n    } catch (error) {\n      var _error$response;\n      console.error(\"Błąd dodawania opinii:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert(\"Nie udało się dodać opinii.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Przeczytane ksi\\u0105\\u017Cki\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: readBooks.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: \"2rem\",\n          borderBottom: \"1px solid #ccc\",\n          paddingBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: book.bookTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Autor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 16\n          }, this), \" \", book.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), book.dateRead && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Data przeczytania:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 34\n          }, this), \" \", new Date(book.dateRead).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 31\n        }, this), book.rating && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Ocena:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 32\n          }, this), \" \", book.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this), book.reviewText && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Opinia:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 36\n          }, this), \" \", book.reviewText]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Dodaj lub edytuj swoj\\u0105 opini\\u0119...\",\n          value: reviews[book._id] || \"\",\n          onChange: e => handleReviewChange(book._id, e.target.value),\n          rows: 3,\n          style: {\n            width: \"100%\",\n            marginTop: \"0.5rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => submitReview(book._id),\n          style: {\n            marginTop: \"0.5rem\"\n          },\n          children: \"Zapisz opini\\u0119\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, book._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(ReadBooks, \"p1Dz1A1VSR9Xhd+1xP8Nl+tRgJM=\");\n_c = ReadBooks;\nexport default ReadBooks;\nvar _c;\n$RefreshReg$(_c, \"ReadBooks\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","ReadBooks","_s","readBooks","setReadBooks","reviews","setReviews","token","localStorage","getItem","fetchReadBooks","res","get","headers","data","initialReviews","forEach","book","_id","reviewText","err","console","error","handleReviewChange","bookId","value","prev","submitReview","post","alert","_error$response","response","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","style","marginBottom","borderBottom","paddingBottom","bookTitle","author","dateRead","Date","toLocaleDateString","rating","placeholder","onChange","e","target","rows","width","marginTop","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kubaj/Desktop/react-mern/klient/src/components/Main/ReadBook.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction ReadBooks() {\r\n  const [readBooks, setReadBooks] = useState([]);\r\n  const [reviews, setReviews] = useState({}); // reviewText dla każdej książki\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  const fetchReadBooks = async () => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:8080/api/library/read\", {\r\n        headers: { \"x-access-token\": token },\r\n      });\r\n      setReadBooks(res.data.data);\r\n\r\n      // Inicjalizacja reviews - przypisz aktualne opinie do stanu\r\n      const initialReviews = {};\r\n      res.data.data.forEach((book) => {\r\n        initialReviews[book._id] = book.reviewText || \"\";\r\n      });\r\n      setReviews(initialReviews);\r\n    } catch (err) {\r\n      console.error(\"Błąd pobierania przeczytanych książek:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchReadBooks();\r\n  }, []);\r\n\r\n  const handleReviewChange = (bookId, value) => {\r\n    setReviews((prev) => ({ ...prev, [bookId]: value }));\r\n  };\r\n\r\n  const submitReview = async (bookId) => {\r\n    try {\r\n      await axios.post(\r\n        `http://localhost:8080/api/library/read/${bookId}/opinion`,\r\n        { reviewText: reviews[bookId] },\r\n        { headers: { \"x-access-token\": token } }\r\n      );\r\n      alert(\"Opinia została dodana!\");\r\n      fetchReadBooks(); // odśwież listę po aktualizacji\r\n    } catch (error) {\r\n      console.error(\"Błąd dodawania opinii:\", error.response?.data || error.message);\r\n      alert(\"Nie udało się dodać opinii.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Przeczytane książki</h2>\r\n      <ul>\r\n        {readBooks.map((book) => (\r\n          <li key={book._id} style={{ marginBottom: \"2rem\", borderBottom: \"1px solid #ccc\", paddingBottom: \"1rem\" }}>\r\n            <h3>{book.bookTitle}</h3>\r\n            <p><strong>Autor:</strong> {book.author}</p>\r\n            {book.dateRead && <p><strong>Data przeczytania:</strong> {new Date(book.dateRead).toLocaleDateString()}</p>}\r\n            {book.rating && <p><strong>Ocena:</strong> {book.rating}</p>}\r\n            {book.reviewText && <p><strong>Opinia:</strong> {book.reviewText}</p>}\r\n\r\n            <textarea\r\n              placeholder=\"Dodaj lub edytuj swoją opinię...\"\r\n              value={reviews[book._id] || \"\"}\r\n              onChange={(e) => handleReviewChange(book._id, e.target.value)}\r\n              rows={3}\r\n              style={{ width: \"100%\", marginTop: \"0.5rem\" }}\r\n            />\r\n            <button onClick={() => submitReview(book._id)} style={{ marginTop: \"0.5rem\" }}>\r\n              Zapisz opinię\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReadBooks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}